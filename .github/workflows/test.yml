name: AWS Terraform Plan

on:
  push:
    branches: ["**"]

# expose everything except the two AWS keys as env vars
env:
  AWS_REGION:               ${{ secrets.AWS_REGION }}
  BACKEND_BUCKET:           ${{ secrets.AWS_BACKEND_BUCKET }}
  BACKEND_KEY:              ${{ secrets.AWS_BACKEND_MONITORING_KEY }}
  BACKEND_REGION:           ${{ secrets.AWS_BACKEND_REGION }}
  MONITORING_DOMAIN:        ${{ secrets.AWS_MONITORING_DOMAIN }}
  DOMAIN_ZONE_ID:           ${{ secrets.AWS_DOMAIN_ZONE_ID }}
  MONITORING_ACM:           ${{ secrets.AWS_MONITORING_ACM }}
  TF_DIR:                   "./terraform/provisioners/monitoring"

jobs:
  monitor-plan:
    uses: Mad-Pixels/github-workflows/.github/workflows/aws-terraform.yml@main
    # only these two go under `secrets:` for the reusable workflow
    secrets:
      aws_access_key_id:      ${{ secrets.AWS_ACCESS_KEY }}
      aws_secret_access_key:  ${{ secrets.AWS_SECRET_KEY }}
    with:
      aws_region:    ${{ env.AWS_REGION }}
      tf_dir:        ${{ env.TF_DIR }}
      backend_bucket: ${{ env.BACKEND_BUCKET }}
      backend_key:    ${{ env.BACKEND_KEY }}
      backend_region: ${{ env.BACKEND_REGION }}
      workspace:      monitoring
      command:        plan
      # build your -var flags here, referencing env.* is allowed
      tf_vars: >-
        -var domain_name=${{ env.MONITORING_DOMAIN }}
        -var domain_zone_id=${{ env.DOMAIN_ZONE_ID }}
        -var domain_acm_arn=${{ env.MONITORING_ACM }}
# jobs:
#   terraform:
#     name: 'Terraform Plan'
#     runs-on: ubuntu-latest
    
#     env:
#       AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_KEY }}
#       AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY }}
#       AWS_REGION: ${{ secrets.AWS_REGION }}

#       TF_DIR: "./terraform/provisioners/monitoring"

#       TF_VAR_aws_region: ${{ secrets.AWS_REGION }}
#       TF_VAR_use_localstack: "false"
#       TF_VAR_domain_name: ${{ secrets.AWS_MONITORING_DOMAIN }}
#       TF_VAR_domain_zone_id: ${{ secrets.AWS_DOMAIN_ZONE_ID }}
#       TF_VAR_domain_acm_arn: ${{ secrets.AWS_MONITORING_ACM }}
      
#     defaults:
#       run:
#         shell: bash
#         working-directory: ${{ env.TF_DIR }}
        
#     steps:
#     - name: Checkout Repository
#       uses: actions/checkout@v3
      
#     - name: Set up Terraform
#       uses: hashicorp/setup-terraform@v2
#       with:
#         terraform_version: 1.6.1
        
#     - name: Create backend_aws.hcl
#       run: |
#         cat > backend_aws.hcl << 'EOF'
#         bucket  = "${{ secrets.AWS_BACKEND_BUCKET }}"
#         key     = "${{ secrets.AWS_BACKEND_MONITORING_KEY }}"
#         region  = "${{ secrets.AWS_BACKEND_REGION }}"
#         encrypt = true
#         EOF

#     - name: Create backend 
#       run: |
#         cat << EOF > backend.tf
#         terraform {
#           backend "s3" {}
#         }
#         EOF
      
#     - name: Terraform Init
#       run: terraform init -reconfigure -backend-config=backend_aws.hcl
      
#     - name: Terraform Format Check
#       run: terraform fmt -check
      
#     - name: Terraform Validate
#       run: terraform validate
      
#     - name: Terraform Plan
#       run: terraform plan 
#       id: plan
      
#     - name: Output Plan
#       run: echo "${{ steps.plan.outputs.stdout }}"