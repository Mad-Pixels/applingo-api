name: Terraform 

on:
  workflow_call:
    inputs:
      aws_secret_key:
        type: string
      aws_access_key:
        type: string
      environment:
        type: string
      tf_command:
        type: string

env:
  aws_access_key_id:     ${{ inputs.aws_access_key }}
  aws_secret_access_key: ${{ inputs.aws_secret_key }}
  aws_region:            ${{ secrets.AWS_REGION }}

  backend_bucket:        ${{ secrets.AWS_BACKEND_BUCKET }}-${{ inputs.environment }}
  backend_region:        ${{ secrets.AWS_BACKEND_REGION }}

jobs:
  tf-infra:
    name: TF Invoke Infra
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Plan
        uses: Mad-Pixels/github-workflows/.github/actions/terraform@main
        with:
          aws_access_key_id:     ${{ env.aws_access_key_id }}
          aws_secret_access_key: ${{ env.aws_secret_access_key }}
          aws_region:            ${{ env.aws_region }}

          backend_bucket:        ${{ env.backend_bucket }}
          backend_key:           ${{ secrets.AWS_BACKEND_INFRA_KEY }}
          backend_region:        ${{ env.backend_region }}

          tf_dir:                terraform/provisioners/infra
          tf_command:            ${{ inputs.tf_command }}
          tf_vars: >-
            -var environment=${{ inputs.environment }}

  tf-monitoring:
    name: TF Invoke Monitoring
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Plan
        uses: Mad-Pixels/github-workflows/.github/actions/terraform@main
        with:
          aws_access_key_id:     ${{ env.aws_access_key_id }}
          aws_secret_access_key: ${{ env.aws_secret_access_key }}
          aws_region:            ${{ env.aws_region }}

          backend_bucket:        ${{ env.backend_bucket }}
          backend_key:           ${{ secrets.AWS_BACKEND_MONITORING_KEY }}
          backend_region:        ${{ env.backend_region }}

          tf_dir:                terraform/provisioners/monitoring
          tf_command:            ${{ inputs.tf_command }}
          tf_vars: >-
            -var domain_name=""
            -var domain_zone_id=""
            -var domain_acm_arn=""

  tf-service:
    name: TF Invoke Service
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      
      - name: Plan
        uses: Mad-Pixels/github-workflows/.github/actions/terraform@main
        with:
          aws_access_key_id:     ${{ env.aws_access_key_id }}
          aws_secret_access_key: ${{ env.aws_secret_access_key }}
          aws_region:            ${{ env.aws_region }}

          backend_bucket:        ${{ env.backend_bucket }}
          backend_key:           ${{ secrets.AWS_BACKEND_SERVICE_KEY }}
          backend_region:        ${{ env.backend_region }}

          tf_dir:                terraform/provisioners/service
          tf_command:            ${{ inputs.tf_command }}
          tf_vars: >-
            -var environment=${{ inputs.environment }}
            -var jwt_secret=${{ secrets.API_WEB_JWT_STG }}
            -var openai_key=${{ secrets.API_OPENAI_KEY_STG }}
            -var device_api_token=${{ secrets.API_DEVICE_KEY_STG }}
            -var arch="arm64"
